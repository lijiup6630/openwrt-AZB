From ca74246c142f01dc546db2129a58e12229a27eb5 Mon Sep 17 00:00:00 2001
From: Hauke Mehrtens <hauke.mehrtens@intel.com>
Date: Wed, 13 Nov 2019 12:02:20 +0100
Subject: Rename HAVE_C99 to SAFECLIB_HAVE_C99

This adds a prefix to make sure this is not conflicting with some other
defines by programs using the header files.

Signed-off-by: Hauke Mehrtens <hauke.mehrtens@intel.com>
---
 configure.ac             |  6 +++---
 include/safe_str_lib.h   |  8 ++++----
 src/io/tmpnam_s.c        |  2 +-
 src/safeclib_private.h   | 10 +++++-----
 src/str/snprintf_s.c     |  4 ++--
 src/str/sprintf_s.c      |  4 ++--
 src/wchar/snwprintf_s.c  |  4 ++--
 src/wchar/swprintf_s.c   |  4 ++--
 tests/test_private.h     | 10 +++++-----
 tests/test_snprintf_s.c  |  4 ++--
 tests/test_snwprintf_s.c |  2 +-
 tests/test_sprintf_s.c   |  2 +-
 tests/test_swprintf_s.c  |  2 +-
 13 files changed, 31 insertions(+), 31 deletions(-)

--- a/configure.ac
+++ b/configure.ac
@@ -386,15 +386,15 @@ if test "x$ac_cv_prog_cc_c99" = "xno"; t
    dnl we really should ERROR, lets see how far can come without
    AC_MSG_WARN([This compiler ${CC} has no c99 support])
 else
-   AC_DEFINE([HAVE_C99], 1,
+   AC_DEFINE([SAFECLIB_HAVE_C99], 1,
         [Defined to 1 when the compiler supports c99, mostly (...) macros])
    if test "x$ac_cv_prog_cc_c99" != "x"; then
       AC_MSG_RESULT([added $ac_cv_prog_cc_c99 to CFLAGS])
       AM_CFLAGS="$AM_CFLAGS $ac_cv_prog_cc_c99"
    fi
 fi
-dnl AM_CONDITIONAL([HAVE_C99], [test "x$ac_cv_prog_cc_c99=no" != "xno"])
-AC_SUBST(HAVE_C99)
+dnl AM_CONDITIONAL([SAFECLIB_HAVE_C99], [test "x$ac_cv_prog_cc_c99=no" != "xno"])
+AC_SUBST(SAFECLIB_HAVE_C99)
 
 if test "x$ac_cv_prog_cc_c11" != "xno"; then
    AC_DEFINE([HAVE_C11], 1,
--- a/include/safe_str_lib.h
+++ b/include/safe_str_lib.h
@@ -156,7 +156,7 @@ char * strtok_s(char *_Str,const char *_
 
 /* safe sprintf_s */
 /* now __STDC_WANT_LIB_EXT1__ >= 1 compatible */
-#ifdef HAVE_C99
+#ifdef SAFECLIB_HAVE_C99
 EXTERN int
 _sprintf_s_chk(char *restrict dest, const rsize_t dmax, const size_t destbos,
                const char *restrict fmt, ...)
@@ -176,7 +176,7 @@ _vsprintf_s_chk(char *restrict dest, rsi
 
 
 /* truncating, no ESNOSPC */
-#if defined(HAVE_C99) && !defined(TEST_MSVCRT)
+#if defined(SAFECLIB_HAVE_C99) && !defined(TEST_MSVCRT)
 EXTERN int
 _snprintf_s_chk(char *restrict dest, rsize_t dmax, const size_t destbos,
                 const char * restrict fmt, ...)
@@ -719,7 +719,7 @@ wchar_t* wcstok_s(wchar_t *_Str, const w
     _wcstok_s_chk(dest,dmaxp,delim,ptr,BOS(dest))
 #endif
 
-#if defined(HAVE_C99) && !defined(TEST_MSVCRT)
+#if defined(SAFECLIB_HAVE_C99) && !defined(TEST_MSVCRT)
 EXTERN int
 _swprintf_s_chk(wchar_t *restrict dest, rsize_t dmax, const size_t destbos,
                 const wchar_t* restrict fmt, ...)
@@ -741,7 +741,7 @@ _vswprintf_s_chk(wchar_t *restrict dest,
     _vswprintf_s_chk(dest,dmax,BOS(dest),fmt,ap)
 
 /* truncating, no ESNOSPC */
-#if defined(HAVE_C99) && !defined(TEST_MSVCRT)
+#if defined(SAFECLIB_HAVE_C99) && !defined(TEST_MSVCRT)
 EXTERN int
 _snwprintf_s_chk(wchar_t *restrict dest, rsize_t dmax, const size_t destbos,
                 const wchar_t* restrict fmt, ...)
--- a/src/io/tmpnam_s.c
+++ b/src/io/tmpnam_s.c
@@ -129,7 +129,7 @@ _tmpnam_s_chk(const char *dest, rsize_t 
         return ESLEMAX;
     }
 
-#if !defined HAVE_C99 && defined HAVE_CXX
+#if !defined SAFECLIB_HAVE_C99 && defined HAVE_CXX
     result = tmpnam(dp);
 #else
 # ifdef __clang
--- a/src/safeclib_private.h
+++ b/src/safeclib_private.h
@@ -49,7 +49,7 @@
 
 #define RCNEGATE(x)  ( -(x) )
 
-#ifndef HAVE_C99
+#ifndef SAFECLIB_HAVE_C99
 # define slprintf
 # define sldebug_printf
 #else
@@ -149,7 +149,7 @@ typedef unsigned long uintptr_t;
 #define RCNEGATE(x)  (x)
 
 #define slabort()       abort()
-#ifndef HAVE_C99
+#ifndef SAFECLIB_HAVE_C99
 # define slprintf	printf
 # define sldebug_printf printf
 #else
@@ -186,7 +186,7 @@ typedef unsigned long uintptr_t;
 #define _UNICODE_MAX 0x10ffff
 
 #ifndef sldebug_printf
-# ifdef HAVE_C99
+# ifdef SAFECLIB_HAVE_C99
 #  define sldebug_printf(...)
 # else
 #  define sldebug_printf printf
@@ -222,9 +222,9 @@ typedef unsigned long uintptr_t;
 #  define GCC_DIAG_RESTORE
 #endif
 
-#if defined(DEBUG) && defined(HAVE_C99) && defined(__KERNEL__)
+#if defined(DEBUG) && defined(SAFECLIB_HAVE_C99) && defined(__KERNEL__)
 #  define debug_printf(...)  printk(KERN_DEBUG __VA_ARGS__)
-#elif defined(HAVE_C99)
+#elif defined(SAFECLIB_HAVE_C99)
 #  define debug_printf(...) fprintf(STDERR, __VA_ARGS__)
 #else
 #  define debug_printf printf
--- a/src/str/snprintf_s.c
+++ b/src/str/snprintf_s.c
@@ -90,7 +90,7 @@ any of the arguments corresponding to %s
  *    sprintf_s(), vsnprintf_s(), snwprintf_s()
  */
 
-#ifdef HAVE_C99
+#ifdef SAFECLIB_HAVE_C99
 EXPORT int
 _snprintf_s_chk(char * restrict dest, rsize_t dmax, const size_t destbos,
                 const char * restrict fmt, ...)
@@ -103,7 +103,7 @@ snprintf_s     (char * restrict dest, rs
     va_list ap;
     const char *p;
     int ret = -1;
-#ifndef HAVE_C99
+#ifndef SAFECLIB_HAVE_C99
     const size_t destbos = BOS_UNKNOWN;
 #endif
 
--- a/src/str/sprintf_s.c
+++ b/src/str/sprintf_s.c
@@ -98,7 +98,7 @@
  *    vsprintf_s(), snprintf_s()
  */
 
-#ifdef HAVE_C99
+#ifdef SAFECLIB_HAVE_C99
 EXPORT int
 _sprintf_s_chk(char * restrict dest, const rsize_t dmax,
                const size_t destbos,
@@ -112,7 +112,7 @@ sprintf_s     (char * restrict dest, rsi
     int ret = -1;
     va_list ap;
     const char *p;
-#ifndef HAVE_C99
+#ifndef SAFECLIB_HAVE_C99
     const size_t destbos = BOS_UNKNOWN;
 #endif
 
--- a/src/wchar/snwprintf_s.c
+++ b/src/wchar/snwprintf_s.c
@@ -111,7 +111,7 @@ any of the arguments corresponding to %s
  *    vswprintf_s(), swprintf_s(), vsnprintf_s()
  */
 
-#if defined(HAVE_C99) && !defined(TEST_MSVCRT)
+#if defined(SAFECLIB_HAVE_C99) && !defined(TEST_MSVCRT)
 EXPORT int
 _snwprintf_s_chk(wchar_t *restrict dest, rsize_t dmax, const size_t destbos,
                  const wchar_t *restrict fmt, ...)
@@ -125,7 +125,7 @@ snwprintf_s(wchar_t *restrict dest, rsiz
     wchar_t *p;
     int ret = -1;
     const size_t destsz = dmax * sizeof(wchar_t);
-#if !(defined(HAVE_C99) && !defined(TEST_MSVCRT))
+#if !(defined(SAFECLIB_HAVE_C99) && !defined(TEST_MSVCRT))
     const size_t destbos = BOS_UNKNOWN;
 #endif
 
--- a/src/wchar/swprintf_s.c
+++ b/src/wchar/swprintf_s.c
@@ -108,7 +108,7 @@ any of the arguments corresponding to %s
  *    vswprintf_s(), snwprintf_s(), vsnprintf_s()
  */
 
-#if defined(HAVE_C99) && !defined(TEST_MSVCRT)
+#if defined(SAFECLIB_HAVE_C99) && !defined(TEST_MSVCRT)
 EXPORT int
 _swprintf_s_chk(wchar_t *restrict dest, rsize_t dmax, const size_t destbos,
             const wchar_t *restrict fmt, ...)
@@ -122,7 +122,7 @@ swprintf_s(wchar_t *restrict dest, rsize
     wchar_t *p;
     int ret = -1;
     const size_t destsz = dmax * sizeof(wchar_t);
-#if !(defined(HAVE_C99) && !defined(TEST_MSVCRT))
+#if !(defined(SAFECLIB_HAVE_C99) && !defined(TEST_MSVCRT))
     const size_t destbos = BOS_UNKNOWN;
 #endif
 
--- a/tests/test_private.h
+++ b/tests/test_private.h
@@ -43,7 +43,7 @@
 #include <linux/ctype.h>
 
 #include <linux/string.h>
-#ifdef HAVE_C99
+#ifdef SAFECLIB_HAVE_C99
 #define printf(...) printk(KERN_INFO __VA_ARGS__)
 #endif
 
@@ -207,13 +207,13 @@
 #endif
 
 #ifdef DEBUG
-#  if defined(HAVE_C99) && defined(__KERNEL__)
+#  if defined(SAFECLIB_HAVE_C99) && defined(__KERNEL__)
 #    define debug_printf(...)  printk(KERN_DEBUG __VA_ARGS__)
 #  else
 #    define debug_printf printf
 #  endif
 #else
-# ifdef HAVE_C99
+# ifdef SAFECLIB_HAVE_C99
 #   define debug_printf(...)
 # else
 #   define debug_printf printf
@@ -221,13 +221,13 @@
 #endif
 
 #ifdef XDEBUG
-#  if defined(HAVE_C99)
+#  if defined(SAFECLIB_HAVE_C99)
 #    define xdebug_printf(...)  printf(__VA_ARGS__)
 #  else
 #    define xdebug_printf printf
 #  endif
 #else
-# ifdef HAVE_C99
+# ifdef SAFECLIB_HAVE_C99
 #   define xdebug_printf(...)
 # else
 #   define xdebug_printf printf
--- a/tests/test_snprintf_s.c
+++ b/tests/test_snprintf_s.c
@@ -9,7 +9,7 @@
 #include "test_private.h"
 #include "safe_str_lib.h"
 #if defined(TEST_MSVCRT) && defined(HAVE_SNPRINTF_S)
-#ifdef HAVE_C99
+#ifdef SAFECLIB_HAVE_C99
 #undef snprintf_s
 EXTERN int snprintf_s(char * restrict dest, rsize_t dmax, const char * restrict fmt, ...);
 #endif
@@ -62,7 +62,7 @@ int test_snprintf_s (void)
     NEGERR(ESLEMAX)
 
     /* only with c99 __VA_ARGS__ we can pass destbos */
-# ifdef HAVE_C99
+# ifdef SAFECLIB_HAVE_C99
     if (_BOS_KNOWN(str1)) {
         EXPECT_BOS("dest overflow")
         rc = snprintf_s(str1, LEN+1, "%s", str2);
--- a/tests/test_snwprintf_s.c
+++ b/tests/test_snwprintf_s.c
@@ -48,7 +48,7 @@ int test_snwprintf_s (void)
     NEGERR(ESZEROL)
 
     /* only with c99 __VA_ARGS__ we can pass destbos */
-# ifdef HAVE_C99
+# ifdef SAFECLIB_HAVE_C99
     if (_BOS_KNOWN(str1)) {
         EXPECT_BOS("dest overflow")
         rc = snwprintf_s(str1, LEN+1, L"%ls", str2);
--- a/tests/test_sprintf_s.c
+++ b/tests/test_sprintf_s.c
@@ -9,7 +9,7 @@
 #include "test_private.h"
 #include "safe_str_lib.h"
 #if defined(TEST_MSVCRT) && defined(HAVE_SPRINTF_S)
-#ifdef HAVE_C99
+#ifdef SAFECLIB_HAVE_C99
 #undef sprintf_s
 EXTERN int sprintf_s(char * restrict dest, rsize_t dmax, const char * restrict fmt, ...);
 #endif
--- a/tests/test_swprintf_s.c
+++ b/tests/test_swprintf_s.c
@@ -61,7 +61,7 @@ int main (void)
     rc = swprintf_s(str1, RSIZE_MAX_STR+1, L"%ls", str2);
     ERRNO_MSVC(-ESLEMAX, 0);
 
-# if defined HAVE___BUILTIN_OBJECT_SIZE && defined HAVE_C99
+# if defined HAVE___BUILTIN_OBJECT_SIZE && defined SAFECLIB_HAVE_C99
     EXPECT_BOS("dest overflow")
     rc = swprintf_s(str1, LEN+1, L"%ls", str2);
     ERRNO_MSVC(-EOVERFLOW, 0);
